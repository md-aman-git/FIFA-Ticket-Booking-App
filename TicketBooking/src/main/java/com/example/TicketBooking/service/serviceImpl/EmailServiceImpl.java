package com.example.TicketBooking.service.serviceImpl;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.util.Properties;
import java.util.Random;

import javax.mail.Message;

import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;

import org.springframework.stereotype.Service;

import com.example.TicketBooking.repository.EmailRepo;
import com.example.TicketBooking.service.EmailService;

@Service
public class EmailServiceImpl implements EmailRepo, EmailService {

	public boolean sendMail(String email, String content) {
		// Put recipientâ€™s address
		String to = email;

		// Put senderâ€™s address
		String from = "dummyfifaclub@gmail.com";
		final String username = "dummyfifaclub@gmail.com";// username generated by Mailtrap
		final String password = "football_123@";// password generated by Mailtrap

		// Paste host address from the SMTP settings tab in your Mailtrap Inbox
		String host = "smtp.gmail.com";

		Properties props = new Properties();
		props.put("mail.smtp.auth", "true");
		props.put("mail.smtp.starttls.enable", "true");// itâ€™s optional in Mailtrap
		props.put("mail.smtp.host", host);
		props.put("mail.smtp.port", "465");// use one of the options in the SMTP settings tab in your Mailtrap Inbox
		props.put("mail.smtp.socketFactory.class", "javax.net.ssl.SSLSocketFactory");

		// Get the Session object.
		Session session = Session.getInstance(props, new javax.mail.Authenticator() {
			protected PasswordAuthentication getPasswordAuthentication() {
				return new PasswordAuthentication(username, password);
			}
		});

		try {
			// Create a default MimeMessage object.
			Message message = new MimeMessage(session);

			// Set From: header field
			message.setFrom(new InternetAddress(from));

			// Set To: header field
			message.setRecipients(Message.RecipientType.TO, InternetAddress.parse(to));

			// Set Subject: header field
			message.setSubject("MAIL FROM FIFA CLUB");

			// Put the content of your message
			message.setContent(content, "text/html; charset=utf-8");

			// Send message
			Transport.send(message);

			//System.out.println("Sent message successfully....");

			return true;

		} catch (Exception e) {
			//System.out.println("invalid email id");

		}
		return false;

	}

	public String getHTMLString(String filename) {
		try {
			File f = new File("C:\\Users\\Files\\" + filename + ".html");
			BufferedReader reader = new BufferedReader(new FileReader(f));
			String line = "";
			StringBuffer buffer = new StringBuffer();
			while ((line = reader.readLine()) != null) {
				buffer.append(line);
			}

			reader.close();
			String page = buffer.toString();

			return page;
		} catch (Exception e) {
			//System.out.println("file not found");
		}
		return null;

	}

	public String generateOtp() {
		return new Random().ints(4, 0, 10).mapToObj(Integer::toString).reduce((a, b) -> a + b).get();
	}
}
